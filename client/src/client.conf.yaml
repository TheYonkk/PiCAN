# -----------------------------------------------------------------------------
# PiLogger YAML default configuration file
#
# 
#
# -----------------------------------------------------------------------------

# information for the InfluxDB database where the data should be logged
server:
    # host: 2606:5580:310:7fcf:9a90:96ff:fee3:94bc # data.msuformularacing.com
    host: data.msuformularacing.com
    port: 4949


# key for the server to recognize this vehicle
key: "sr22"


# The CAN interfaces to log, as well as their respective names and DBCs. The name is important
# because the socketcan enumeration (can0, can1, etc.) may not be representative of what you
# actually call the CAN buses
#
# NOTE: The SocketCAN interface must already be up, otherwise the logger may fail.
# Check `ifconfig` command to verify.
interfaces:
    can1: "CAN1"
    can0: "CAN2"


# The size of the decoding queue. The decoding queue is where CAN frames are 
# congregated after read from a socket. The sizing requirement depends on your bus
# load, buses logged, and the number of messages to decode. It is limited by
# computer hardware (most noteably memory).
queue_size: 5000


# max_write_size and max_write_delay refer to batch database writes. max_write_size is
# the maximum amount of measurements allowable in a single database write. To optimize
# writes, Influx suggests an optimum size of 5000 measurements:
# https://docs.influxdata.com/influxdb/v2.0/write-data/best-practices/optimize-writes/#batch-writes
# max_write_delay refers to the maximimum allowable delay in milliseconds before a batch of measurements
# is sent to the database. If the batch includes less than the max_write_size, but the max_write_delay
# has been exceeded, the batch will be sent anyways. To ease network stress and optimize writes,
# the max_write_delay should be as large as possible.
# Essentially, batches will be sent when either of these two limits are exceeded.
# If these two configuration options are ommitted, the defaults for write size and write delay are
# 5000 writes and 5000 milliseconds, respectively.
max_write_size: 5000
max_write_delay: 1000

